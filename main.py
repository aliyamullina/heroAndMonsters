import random

# Счетчик поверженных героем чудовищ:
monster_counter = 0

# У рыцаря изначально не менее 10 жизней и сила удара не менее 10.
# Текущее состояние здоровье героя:
hp = 10

# Текущая сила удара героя:
attack = 10


# Главная функция, запустив которую начнется игра - это функция с названием game() без параметров
def game():
    print('Текстовая игра "Герой и чудовища". Введи 1, чтобы начать! Или 2, чтобы выйти из игры.')
    s = userInput()
    if s in '1':
        print('Ты — рыцарь в фантастической стране. Задача — победить 10 чудовищ, '
              'чтобы спасти королевство от нападения и тем самым выиграть игру!')
        while hp or attack >= 0:
            # Рандомно вывести события из monsters(), swords(), apples()
            f = [monsters, swords, apples]
            rand_func = random.choice(f)
            rand_func()

            # В случае сражения рыцарь побеждает, если число его атаки превосходит число жизней чудовища.
            # При этом чудовище отнимает у рыцаря число жизней, соответствующее его атаке.
            # При победе в игре, на экран должна быть выведена любая строка, в которой присутствует слово ПОБЕДА
            # При победе над 10 чудовищами, выводится сообщение "ПОБЕДА!" (или что-то другое на ваш выбор)
            # и происходит завершение программы.
            # Если у чудовища жизней меньше, чем сила удара героя — то победа.
            # И при этом атака чудовища меньше, чем количество оставшихся жизней героя — победа, но жизни снимаются.
            print('ПОБЕДА')

            # Если чудовище сильнее рыцаря, то есть,
            # если сила атаки чудовища превосходит количество жизней рыцаря — рыцарь умирает,
            # выводится сообщение «ПОРАЖЕНИЕ! игра окончена» и происходит завершение программы.
            # При поражении в игре, на экран должна быть выведена любая строка, в которой присутствует слово ПОРАЖЕНИЕ
            # Все атаки (и героя и чудовища) происходят одновременно.
            # Если в одном ходу произошла и победа над последним чудовищем и смерть героя - то игра проиграна.
            # Если у чудовища больше сила удара, чем жизней у героя — то поражение.
            print('ПОРАЖЕНИЕ')
    else:
        print('С возвращением в реальный мир!')


# Монстры
def monsters():
    # Перед тем как дать игроку выбор драться с чудовищем или убежать, на экран должна быть выведена любая строка,
    # в которой присутствует слово БОЙ.
    # В этой же строке первое встреченное число будет обозначать число жизней чудовища, а второе - его силу удара.

    # Количество жизней чудовищ
    monster_hp = random.randint(1, 10)

    # Силы атаки чудовищ
    monster_attack = random.randint(1, 10)

    # Сражение с чудовищем:
    print('БОЙ! На горизонте чудовище с ', monster_hp, ' жизнями и с силой удара ', monster_attack)

    # Действия
    print('Решайся! 1 - сражаться, 2 - убежать')
    s = userInput()
    if s in '1':
        print('Сражение')
    else:
        print('Фух! Удалось убежать!')


# Мечи
def swords():
    # Перед тем как дать игроку выбор взять меч или пройти мимо него,
    # на экран должна быть выведена любая строка, в которой присутствует слово МЕЧ,
    # а также число обозначающее его силу атаки
    # Должен быть новый меч со случайной силой атаки
    # При взятии нового меча сила атаки рыцаря принимается равной силе атаки нового подобранного меча

    # Силы атаки мечей
    sword_attack = random.randint(1, 10)

    # Нахождение меча
    print('МЕЧ! Найден меч с силой атаки ', sword_attack, 'Старый меч ', attack)

    # Действия
    print('1 - взять меч себе, выбросив старый или 2 - пройти мимо меча')
    s = userInput()
    if s in '1':
        print('Новый меч в ножнах! Сила удара:', sword_attack - attack)
    else:
        print('Проходишь мимо меча...')


# Яблочки
def apples():
    # При обнаружении яблочка — рыцарь съедает его,
    # и узнаёт насколько он увеличил количество жизней и чему теперь равно его количество жизней.
    # В случае нахождения яблочка игроку не даётся выбора действия.
    # количество жизней, которое даёт яблочко
    # Должно быть увеличивающее случайное число здоровья яблочко
    apple_hp = random.randint(1, 10)
    print('Съедено яблочко. Количество жизней увеличилось на:', hp - apple_hp)


# Ввод игрока
def userInput():
    print('Введи цифру 1 или 2')
    while True:
        s = input()
        if s in ('1', '2'):
            return s
        print('Действие не распознано. Введи еще раз 1 или 2')


game()
